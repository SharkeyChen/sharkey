<?xml version="1.0" encoding="utf-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTO Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.example.sharkey.Watcher.Mapper.ArticleMapper">
    <resultMap id="ArticleInfo" type="com.example.sharkey.Entity.Article">
        <id column="id" property="id" jdbcType="INTEGER"></id>
        <result column="title" property="title" jdbcType="VARCHAR"></result>
        <result column="publishtime" property="publishtime" jdbcType="TIMESTAMP"></result>
        <result column="subtitle" property="subtitle" jdbcType="VARCHAR"></result>
<!--        <result column="content" property="content" jdbcType="VARCHAR"></result>-->
<!--        <result column="html" property="html" jdbcType="VARCHAR"></result>-->
        <result column="author" property="author" jdbcType="VARCHAR"></result>
        <collection property="tags" javaType="java.util.List" ofType="com.example.sharkey.Entity.Tag">
            <id column="t_id" property="id" jdbcType="INTEGER"></id>
            <result column="t_tag" property="tag" jdbcType="VARCHAR"></result>
        </collection>
    </resultMap>

    <select id="getAllArticle" resultMap="ArticleInfo">
        select a.id, a.title, a.publishtime, a.subtitle, a.author, t.id t_id, t.tag t_tag from article a left join articletag atg on a.id = atg.articleid
        left join tag t on atg.tagid = t.id
    </select>

    <select id="getArticleListById" parameterType="String" resultMap="ArticleInfo">
        select a.id, a.title, a.publishtime, a.subtitle, a.author, t.id t_id, t.tag t_tag
        from article a left join articletag atg on a.id = atg.articleid left join tag t on atg.tagid = t.id
        where a.author = #{username}
    </select>

    <select id="getArticleById" resultType="com.example.sharkey.Entity.Article">
        select a.id, a.title, a.publishtime, a.subtitle, a.author, a.content, a.html
        from article a
        where id = #{id} and author = #{author}
    </select>

    <insert id="addArticle" parameterType="com.example.sharkey.Entity.Article" keyProperty="id" useGeneratedKeys="true">
        insert into
        article(title, subtitle, content, publishtime, author, html)
        values(#{title}, #{subtitle}, #{content}, #{publishtime}, #{author}, #{html})
    </insert>

    <delete id="deleteArticle" parameterType="int">
        delete from article
        where id = #{articleId}
    </delete>

    <update id="updateArticle" parameterType="com.example.sharkey.Entity.Article">
        update article
        <set>
            <if test="title != null">title = #{title},</if>
            <if test="content != null">content = #{content},</if>
            <if test="subtitle != null">subtitle = #{subtitle},</if>
            <if test="html != null">html = #{html}</if>
        </set>
        where id = #{id}
    </update>
</mapper>